---
help:
  show: Afficher l’aide
  manual:
    title: Manuel ETC
    ordre: >
      intro_manual
      presentation
      exemple_utilisation
      terminologie
      task_data
      deroulement_travail
      stop_report
      durcycvsdursess
  intro_manual: 
    title: Introduction au Manuel
    level: '##'
    text: |
      Ce manual permet d'utiliser l'application ETC (prononcer « 
      Etcétéra ») avec le plus de plaisir et d'efficité possible.

  presentation:
    title: Présentation
    level: '##'
    text: |
      L'application ETC permet de gérer souplement des tâches parallèles
      lorsque plusieurs gros chantiers sont en cours, de natures similaires
      ou différentes, et que l'on veut s'assurer de leur consacrer le même
      temps de travail (ou un temps défini), sans avoir à surveiller de ne
      pas en oublier.

      Elle permet aussi, si on le souhaite de présenter ces travaux dans
      un ordre aléatoire ce qui permet de rompre avec une routine trop
      ennuyeuse.

      Mais pour bien comprendre, voyons comment tout cela se passe.
  exemple_utilisation:
    title: Exemple complet d'utilisation quotidienne
    level: '##'
    text: |
      Imaginons, pour faire simple, que vous avez ces différents projets
      en cours :

      *(peu importe que vous ne connaissiez pas le temps total de 
      développement, il est indiqué ici uniquement pour l'exemple)

      | Travail | Durée totale<br />de réalisation | Temps travaillé |
      | --- | --- | --- |
      | Livre sur le développement personnel | 100 h | 0 h |
      | Programme de gestion de tâche | 150 h | 0 h |
      | Extension de la maison (chambre de bébé) | 200 h | 0 h |
      | Lecture d'un ouvrage historique | 40 h | 0 h |
      | Traduction de l'ouvre technique Xtt | 300 h | 0 h |

      Mais sans organisation, vous n'êtes pas certain ou certaine de 
      consacrer le 
      temps qu'il faudrait à chaque projet dans votre journée, votre
      semaine ou votre mois.
      
      Grâce à ETC, vous allez pouvoir organiser tout ça. D'abord vous
      avez commencé par définir votre liste de tâches 
      (help(define_tasks)) et vous avez réglé vos préférences 
      (help(set_preferences)).

      Comment ? En travaillant par *CYCLE*. 
      
      Un cycle correspond à
      travailler un certain temps (2 heures par défaut) sur chaque
      projet, dans l'ordre ou au hasard, jusqu'à les avoir tous abordé.

      Par exemple, si vous laisser la durée par défaut d'une session
      à 2 heures, voilà comment les choses vont se passer : 
      
      * ETC va vous proposer de travailler 2 heures sur la maison,
      * puis 2 heures sur l'ouvrage historique,
      * puis 2 heures sur le gestionnaire de tâches,
      * puis 2 heures sur le livre de développement personnel,
      * puis 2 heures sur la traduction.

      Vous venez d'accomplir un *CYCLE* et votre état de travail 
      est maintenant le suivant : 

      | Travail | Durée totale | Temps travaillé |
      | --- | --- | --- |
      | Livre sur le développement personnel | 100 h | 2 h |
      | Programme de gestion de tâche | 150 h | 2 h |
      | Extension de la maison (chambre de bébé) | 200 h | 2 h |
      | Lecture d'un ouvrage historique | 40 h | 2 h |
      | Traduction de l'ouvre technique Xtt | 300 h | 2 h |

      Mais nous sommes allés un peu vite… Détaillons un peu le processus
      de mise en route, de comptage du temps et d'arrêt de chaque 
      travail.

      t(help.deroulement_travail.text)

      Les travaux s'enchainent ainsi, peut-être le lendemain et les jours
      suivants, jusqu'à ce qu'ils soient TOUS passés en revue. Une fois que
      TOUS les travaux ont été effectués une première fois, un nouveau 
      cycle reprend.

      > À nouveau, ici, attention de ne pas confondre le temps total 
      qu'il faudrait consacrer à un travail pour l'achever, et le temps
      de travail dans un *cycle*, qui permet d'enchainer plusieurs 
      travaux au cours de la même journée, ou au cours de deux journées
      plus vraisemblablement, sans en oublier.

      Bien entendu, si vous avez achevé un de ces travaux, vous pouvez
      le désactiver (ou le détruire) depuis le panneau des éditions des
      tâches (✍🏽).

      Bien entendu, vous pouvez définir une durée de cycle différente pour 
      chaque travail, afin de lui donner plus ou moins d'importance dans 
      chaque cycle. Vous pouvez vouloir que le temps consacré à la traduction
      soit moins long, vous lui attribuez une durée propre de 90 minutes 
      dans ses données.
      
      Vous pouvez vouloir aussi que le temps consacré à la maison soit 
      plus long, vous lui donnez une durée de 3 heures. Notez que dans ce
      cas, cela ne signifie nullement que vous allez devoir, à chaque 
      cycle, consacrer 3 heures à la maison d'UN SEUL COUP. Non, vous 
      pouvez par exemple ne consacrer qu'une heure à chaque fois. Mais,
      pour que le cycle soit terminé et que les tâches soient proposées
      à nouveau, il faudra que vous ayez fait vos trois sessions de 3
      heures sur le travail de votre maison.

      C'est cela qu'il faut comprendre, c'est qu'au bout d'un cycle,
      vous aurez consacré ce temps à chaque tâche :

      | Tâche | Temps |
      | --- | --- |
      | Livre développement perso | 2 heures |
      | Programme des tâches | 2 heures |
      | Extension de la maison | 3 heures |
      | Lecture livre histoire | 2 heures |
      | Traduction | 1 heure |
      | --- | --- |

  deroulement_travail:
    title: Déroulement du travail sur une tâche
    level: '##'
    text: |
      Tout commence avec ETC qui choisit le premier travail de votre
      liste ou un travail au hasard si tel est votre choix. 
      
      Il l'affiche dans la fenêtre en faisant apparaitre plusieurs 
      boutons :

      | Bouton | Nom | Effet |
      | --- | --- | --- |
      | t(ui.button.start) | Mise en route | Amorce le travail sur la tâche. Un compteur affiche le temps écoulé ou le temps restant (pour le cycle) en fonction de vos choix. |
      | t(ui.button.change) | Autre tâche | Si ce premier travail ne vous plait pas. Ce bouton vous permet de demander un autre travail. Mais attention, il n'est utilisable qu'une seule fois par session, c'est le principe. |
      | t(ui.button.open_project) | Ouverture du projet | Permet d'ouvrir sur le bureau du dossier du projet. |
      | t(ui.button.run) | Jouer le script | Si un script est défini pour le travail, ce bouton permet de le lancer. |

      Vous mettez donc le chronomètre en route à l'aide du bouton 
      t(ui.button.start). Si vous avez choisi le mode « chronomètre »,
      alors le temps se met à défiler depuis 0:00:00. Si, au contraire,
      vous avez choisi le mode « compte à rebours », l'horloge part du
      temps imparti à un tâche dans le cycle (en général 2 heures) ou 
      la durée de travail par session que vous avez définie pour ce
      travail en particulier, et il remonte jusqu'à zéro.

      À n'importe quel moment vous pouvez mettre ce travail en pause 
      à l'aide du
      bouton t(ui.button.pause). Le chronomètre s'arrête, attendant que
      vous relanciez la tâche avec le bouton t(ui.button.restart).

      Puis, après au moins une première minute de travail, vous pouvez
      décider de vous arrêter et vous cliquez sur le bouton t(ui.button.stop).

      Vous pouvez aussi aller au bout du temps et l'application vous 
      préviens alors que le temps est bientôt écoulé et que vous allez
      pouvoir passer à la tâche suivante.

      Un panneau vous est alors proposé, intitulé t(ui.title.stop_report), 
      qui vous permet d'enregistrer un rapport. Ce rapport n'est pas tant
      là pour parler de ce que vous avez fait (même si vous pouvez bien 
      entendu vous en servir pour ça), mais plutôt pour dire ce qu'il 
      faudra faire à la reprise du travail, pour qu'elle soit rapide et
      efficace (pour en savoir plus, consultez help(stop_report)).

      Dans ce panneau, un bouton t(ui.button.dont_save_time_and_report) 
      vous permet de renoncer à l'enregistrement de ce temps de travail,
      si vous estimez qu'il n'a pas été fait correctement par exemple.

      Vous l'enregistrez, ETC vous présente les nouveaux temps sur la
      tâche et, surtout, vous présente la tâche suivante.

  set_preferences:
    title: Définir ses préférences
    level: '##'
    text: |
      D'abord, vous ouvrez l'application après l'avoir chargée. Vous 
      rejoignez les préférences en cliquant sur le bouton (⚙️). Là, 
      vous pouvez choisir : 

      * la **langue** de l'interface et ses messages,
      * la **durée par défaut d'une tâche** au cours d'un cycle (pas 
      son temps total de réalisation),
      * le **mode de l'UI**, sombre ou clair, 
      * l'apparence de l'**horloge** (ou du chronomètre),
      * le **mode de décompte du temps**, soit continu, soit en compte à rebours,
      * le **chemin d'accès au fichier des tâches** (qui se créera avec les
      tâches que vous définirez — help(define_tasks)),
      * le mode de **choix des tâches**, aléatoire ou continu suivant 
      l'ordre dans la liste que vous avez établie,

      *(Remarquez que dans ce panneau se trouvent aussi des outils
      pratiques pour réinitialiser le cycle courant ou ouvrir le
      manuel externe)*

      Vous refermez la fenêtre après avoir enregistré les nouvelles
      informations pour que tout soit pris en compte.

  define_tasks:
    title: Définir la liste des tâches
    level: "##"
    text: |
      Pour définir la liste de vos travaux, vous ouvrez le panneau des 
      tâches à l'aide du bouton ✍🏽. C'est dans ce panneau que vous pouvez
      définir vos « travaux », vos « projets », vos « tâches », peu 
      importe le nom que vous leur donnez.

      Grâce au bouton « ➕ » vous pouvez créer une nouvelle tâche qui
      est ajouée en bas de la liste. Cette liste, au premier lancement
      de l'application, ne devrait comporter qu'une seule tâche.

      Remplissez les champs avec les informations que vous souhaitez
      (même si les propriétés sont assez explicites, vous trouverez dans 
      la section help(task_data) toutes les informations précises).

      Lorsque vous avez établi votre liste, que vous avez organisé les
      tâches dans l'ordre grâce aux flèches, pouvez enregistrer la liste
      grâce au bouton t(ui.button.save). Vous rejoignez alors le
      panneau principal avant votre première tâche.

      > Notez que si vous préférez passer par un fichier YAML ou même
      définir de façon informatisée la liste des tâches à partir d'un
      autre programme, vous pouvez tout à faire le faire en modifiant
      directement le fichier YAML dont le chemin est défini dans les
      préférences de l'application.

  introduction:
    title: INTRODUCTION
    level: "##"
    text: |
      Bienvenue dans l'aide modulaire de l'application ETC 
      (Etcétéra) qui vous permet de travailler parallèlement plusieurs 
      tâches.

      Le fonctionnement de cette application est radicalement différent
      de ceux que vous pouvez connaitre et s'adapte particulièrement aux
      situations où vous avez des projets à mener de front, sans en oublier,
      en leur consacrant un temps chaque jour ou chaque semaine.
  terminologie:
    title: Terminologie
    level: '##'
    text: |
      Afin de bien saisir le sens des explications, il est important 
      d’être au clair avec les termes employés dans l’application. Cette
      petite section permet de tous les retrouver.

      | Terme | | Description |
      | --- | --- | --- |
      | Cycle | | Un *c.* est une boucle complète sur tous les travaux à effectuer. |
      | Temps restant | | Un *tps. r.* correspond au temps qui reste à accomplir sur le travail dans le cycle courant. |
      | Temps effectué | | Le *tps. r.* correspond au temps consacré au travail/projet dans le cycle courant. |
      | --- | ---| --- |
  task_data:
    title: Données d’un travail
    level: '##'
    text: |
      | Propriété | | Description |
      | --- | --- | --- |
      | Actif/Inactif | | Avec ce menu, vous pouvez activer ou désactiver une tâche. Une tâche désactivée n'apparaitra pas dans votre cycle de travail. |
      | Projet | | Le titre du projet, ou du travail |
      | Contenu | | C’est ici que l’on définit ce que l’on doit faire, concrètement. C’est un texte [markdown](https://${pref.getLang()}.wikipedia.org/wiki/Markdown), donc qui peut contenir du formatage simple. |
      | Dossier | | Le chemin d’accès au dossier. Cette information est très importante car c’est elle qui permettra de suivre l’activité sur le travail. |
      | Script | | La force de cette app est de permettre de définir un script à exécuter n’importe quand au cours du travail (souvent avant). Ce script, qui peut être dans n’importe quel langage, permet d’ouvrir à tous les possibles. |
      | Durée | | Pour fixer une durée propre au travail. Si cette valeur n’est pas définie, c’est la valeur par défaut qui est utilisée. |
      | Durée session | | Optionnellement, on peut définir une durée pour la session différente de la durée pour le cycle. C’est subtile mais évident en fait. Pour bien comprendre consulter la partie hlink(Durée de cycle versus durée de session, duree_cycle_vs_duree_sess). |

  stop_report:
    title: "Rapport d’arrêt (de tâche)"
    level: '##'
    text: |
      Le *rapport d'arrêt de tâche* apparait lorsque l’on arrête 
      (bouton t(ui.button.stop)) le travail sur une tâche particulière, que
      ce soit en fin de temps normal ou au cours du travail.

      Ce rapport ne sert pas tant à faire le point sur le travail effectué
      au cours de la session, même si c'est toujours possible, que d'aider
      à commencer rapidement et efficacement la prochain session.

      Car une des plus grosses difficultés lorsque l'on travaille sur plusieurs
      (gros) chantier en même temps, et qu'ils sont très différents de forme et
      de nature, c'est de passer souplement de l'un à l'autre sans avoir à perdre
      trop de temps à se remettre la situation en tête.

      Ce *rapport d'arrêt de tâche* est vraiment là pour ça.

      Pour rédiger ce rapport, il convient donc de se projeter à la prochaine
      session de travail et d'imaginer les indications dont on aurait besoin 
      pour poursuivre aussitôt le travail sur la tâche. Indiquez par 
      exemple les fichiers sur lesquels on travaille ainsi que les lignes
      précises qui sont concernées.

      Astuce : Rédigez ce rapport comme si vous deviez confier la suite du
      travail à quelqu'un qui ne connait rien du projet, ou pas grand-chose.

      Le format de redaction est exclusivement pour le moment le format 
      [Markdown](https://fr.wikipedia.org/wiki/Markdown), pratique pour sa
      simplicité et sa mise en œuvre.

  task_list:
    title: Liste des travaux
    level: '##'
    text: |
      La liste des travaux est la première chose à définir pour pouvoir
      utiliser l'application.

      Il vous suffit de cliquer sur le bouton ✍🏽 de la fenêtre principale
      pour rejoindre le panneau des tâches et données générales.
      Là, cliquer sur le bouton « + » pour ajouter une tâche.
      La suite est aussi intuitive. Détaillons tout de même les différentes
      propriétés que vous pouvez définir :

      t(help.terminologie.text)

      t(help.task_data.text)

  durcycvsdursess:
    title: Durée cycle versus durée session
    level: '###'
    text: |
      Lorsqu’une durée de session est définie (nécessairement inférieure
      à la durée de cycle), l’application se comporte différemment avec 
      le travail : au lieu d’attendre la fin de la durée du cycle (“durée 
      cycle” du travail, ou durée par défaut) pour mettre un terme au travail
      courant, l’application y met un terme une fois la *durée session* 
      atteinte (voir l’exemple concret plus bas). 
      
      Concrètement, cela permet de donner plus de volume de temps à un travail
      à l’intérieur d’un cycle tout en définissant une durée de travail 
      standard par session (c’est-à-dire par jour). Dans le cas contraire, le
      travailleur est obligé de surveiller le temps (c’est là qu’est la 
      différence majeure.)

      ## Exemples

      ### Avec des durées identiques

      Imaginons 6 travaux qui ne définissent aucun temps. La valeur de durée
      du cycle correspondra alors à la durée de travail de la session. Si la
      valeur est réglée à 2 heures, alors les choses se passeront de cette 
      manière : 

      - À l'ouverture de l'application, un premier travail (T4 p.e.) sera
        choisi (au hasard). Le travailleur travaillera 2 heures dessus.
      - Au bout des 2 heures, il sera averti de la fin et un autre travail
        (p.e. T2) lui sera proposé.
      - Au bout des 2 heures, il sera averti et passera au suivant.
      - À la fin de la journée de 8 heures, 4 travaux auront été effectués.
      - Le lendemain, c’est le 5^e travail (p.e. T1) et le 6^e (p.e. T3) qui
        lui seront proposé. Au bout de 4 heures environ, un premier cycle aura
        été accompli et un nouveau cycle sera amorcé.

      Dans cette façon de faire, chaque projet a la même importance et tous
      ont le même temps qui leur est dévolu.

      Mais dans la réalité, certains projets nécessitent plus de temps. D'où
      la formule suivante.

      ### Avec des durées différentes

      Dans cette autre situation le travail T2 nécessite 2 fois plus de
      travail et le travailleur décide de lui accorder 2 fois plus de temps
      au cours d'un cycle. Il lui donne 4 heures.

      - Au début de la journée, le travail T6 est proposé.
      - Au bout de 2 heures, l'application propose le travail suivant, 
        justement le travail T2. Ici, si le travailleur ne veut pas faire
        ses 4 heures d’un seul coup, il doit surveiller le temps pour faire
        un première arrêt à environ 2 heures de travail.
      - L'application enregistre le temps de travail et enregistre surtout
        qu'il restera du temps à faire sur ce projet.
      - Et elle propose le travail suivant.
      - À la fin de la journée, comme pour la configuration précédente, 2
        travaux n'ont pas été abordés, et il reste deux heures de travail sur
        le travail T2.
      - Le lendemain, l'application propose de faire les deux travaux + les
        2 heures restantes environ sur le travail T2.
      
      Cette façon de faire est tout à fait possible et sera très pratique
      même si on ne sait pas combien de temps l’on veut consacrer dans la
      journée à ce travail T2. Peut-être, après tout, auront-on le temps et
      le courage de lui consacrer 4 heures d'un coup.

      Mais si l'on désire mieux harmoniser les journées, on utilise la
      troisième façon de procéder, avec la *durée session*.

      ### Avec des durées-session

      Cette fois, on définit que 4 heures doivent être consacrées à T2 par
      cycle mais que par session (par jour), on ne lui consacrera que 2
      heures. On règle donc sa *durée session* à 2 heures.

      - La journée commence, normalement, avec par exemple le travail T1.
      - Au bout de 2 heures, l'application propose de passer justement à T2.
      - Deux heures plus tard, puisque c'est la *durée session* défini pour
        le travail, l'app propose de passer au travail suivant (noter que 
        le travailleur a tout loisir de refuser et de poursuivre sur T2).
      - Le travailleur peut passer au travail suivant.
      - Et ainsi de suite jusqu’au lendemain.

      Bien entendu, les exemples présentés ici n'utilisait qu’un seul travail
      avec des durées différentes mais dans la réalité, chaque travail peut
      avoir sa propre *durée cycle* et sa propre *durée session* pour s'adapter
      à toutes les situations.